{"version":3,"file":"cyborg-js.umd.js","sources":["../src/constants/EventNames.ts","../src/notifications/Notification.ts","../src/notifications/NotificationBody.ts","../src/notifications/NotificationController.ts","../src/core/MotherBoard.ts","../src/functions/walkDom.ts","../src/functions/cyborgEval.ts","../src/core/Component.ts","../src/cyborg-js.ts"],"sourcesContent":["export enum EventNames {\n  DOCUMENT_READY = 'DOMContentLoaded',\n  NODE_REMOVED = 'DOMNodeRemovedFromDocument'\n}\n","import { ICanHandleNotifications } from '../interfaces/ICanHandleNotifications'\n\nexport class Notification {\n  readonly name: string\n  readonly target: ICanHandleNotifications\n  readonly handler: Function\n\n  constructor(\n    pTarget: ICanHandleNotifications,\n    pName: string,\n    pHandler: Function\n  ) {\n    this.name = pName\n    this.handler = pHandler\n    this.target = pTarget\n  }\n}\n","export class NotificationBody {\n  notification: string\n  payload: Record<string, any>\n\n  constructor(pType: string, pPayload?: Record<string, any>) {\n    this.notification = pType\n    this.payload = pPayload || {}\n  }\n}\n","import { Notification } from './Notification'\nimport { NotificationBody } from './NotificationBody'\nimport { IAmComponent } from '../interfaces/IAmComponent'\nimport { ICanHandleNotifications } from '../interfaces/ICanHandleNotifications'\n\nexport class NotificationController {\n  static _instance: NotificationController\n\n  private _listeners: Array<Notification>\n\n  constructor() {\n    if (NotificationController._instance) {\n      throw new Error('Use NotificationController.getInstance()')\n    }\n    NotificationController._instance = this\n    this._listeners = []\n  }\n\n  static getInstance(): NotificationController {\n    if (NotificationController._instance) {\n      return NotificationController._instance\n    }\n    return new NotificationController()\n  }\n\n  /**\n   * emit a notification\n   * @param pType\n   * @param pParams\n   */\n  notify(pType: string, pParams?: Record<string, any>): void {\n    const listeners: ReadonlyArray<Notification> = this._listeners\n    const notes: ReadonlyArray<Notification> = listeners.filter(\n      (listener: Notification) => {\n        return listener.name === pType\n      }\n    )\n\n    notes.forEach((note: Notification) => {\n      const body: NotificationBody = new NotificationBody(pType, pParams || {})\n      note.handler(body)\n    })\n  }\n\n  /**\n   * Add a Notification Listener\n   * @param pTarget\n   * @param pType\n   * @param pHandler\n   */\n  addNotificationListener(\n    pTarget: ICanHandleNotifications,\n    pType: string,\n    pHandler: Function\n  ): void {\n    const note: Notification = new Notification(\n      pTarget,\n      pType,\n      pHandler.bind(pTarget)\n    )\n    this._listeners.push(note)\n  }\n\n  /**\n   * Remove a given listener. This only removes one record.\n   * @param pType string Notification name\n   * @param pTarget Component object\n   */\n  removeNotificationListener(pType: string, pTarget: any): void {\n    const listeners: Array<Notification> = this._listeners\n    const index: number = listeners.findIndex(\n      (notification: Notification): boolean => {\n        return notification.name === pType && notification.target === pTarget\n      }\n    )\n    this._listeners = listeners.splice(index, 1)\n  }\n\n  removeAllListenersFor(pInstance: IAmComponent): void {\n    const listeners: Array<Notification> = this._listeners\n    this._listeners = listeners.filter(\n      (notification: Notification): boolean => {\n        return notification.target.name !== pInstance.name\n      }\n    )\n  }\n\n  get listeners(): Array<Notification> {\n    return this._listeners\n  }\n}\n","import { NotificationRegistration } from '../notifications/NotificationRegistration';\nimport { EventNames } from '../constants/EventNames';\nimport { NotificationController } from '../notifications/NotificationController';\nimport { IAmComponent } from '../interfaces/IAmComponent';\nimport { ICanHandleNotifications } from '../interfaces/ICanHandleNotifications';\n\ndeclare interface ComponentConstructor {\n  new (): IAmComponent;\n}\n\ndeclare const componentsMapping: Map<string, ComponentConstructor>;\n\nexport class MotherBoard {\n  static _instance: MotherBoard;\n\n  public componentsMap: Record<string,any>;\n  private _components: Array<IAmComponent> = [];\n  private _data: Record<string, any> = {};\n\n  constructor() {\n    if (MotherBoard._instance) {\n      throw new Error('Use MotherBoard.getInstance()');\n    }\n    MotherBoard._instance = this;\n    this.init();\n  }\n\n  static getInstance(): MotherBoard {\n    if (MotherBoard._instance) {\n      return MotherBoard._instance;\n    }\n    return new MotherBoard();\n  }\n\n  /**\n   * Init Application.\n   */\n  init(): void {\n    window.onload = (): void => {\n      this.onload();\n    };\n\n    window.onunload = (): void => {\n      this.onunload();\n    };\n\n    window.onpagehide = (): void => {\n      this.destroy();\n    };\n\n    document.addEventListener(\n      EventNames.DOCUMENT_READY,\n      (): void => {\n        this.bind();\n      },\n      false\n    );\n  }\n\n  /**\n   * Document ready handler\n   */\n  bind(): void {\n    const html: HTMLHtmlElement | null = document.querySelector('html');\n    if (!html) {\n      throw Error('No html tag available');\n    }\n\n    html.classList.remove('no-js');\n    html.classList.add('js');\n    this.build(html);\n  }\n\n  build(pEl: HTMLElement): void {\n    const componentsList: Array<HTMLElement> = Array.from(\n      pEl.querySelectorAll('[data-component]')\n    );\n    if (componentsList.length > 0) {\n      componentsList.forEach((el: HTMLElement) => {\n        const dataset: DOMStringMap = el.dataset;\n        if (dataset && dataset.component) {\n          const componentsArray: Array<string> = dataset.component\n            .replace(' ', '')\n            .split(',');\n          componentsArray.forEach((componentString: string) => {\n            const ComponentClass: any = MotherBoard.getComponentMapByName(\n              this.componentsMap,\n              componentString\n            );\n            if (ComponentClass) {\n              const component: IAmComponent = new ComponentClass();\n              if (component.notifications && component.notifications.length > 0) {\n                this.registerNotification({\n                  name: componentString,\n                  notifications: component.notifications,\n                  classRef: component,\n                });\n              }\n\n              component.bind(el);\n              this._components.push(component);\n              this.destroyComponentListener(component, el);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Window onload handler\n   */\n  onload(): void {\n    this._components.forEach((pComponent: IAmComponent) => {\n      pComponent.onload();\n    });\n  }\n\n  onunload(): void {\n    this._components.forEach((pComponent: IAmComponent) => {\n      pComponent.onunload();\n    });\n  }\n\n  destroyComponentListener(pComponent: IAmComponent, pEl: HTMLElement): void {\n    let component: IAmComponent | null = pComponent;\n    let el: HTMLElement | null = pEl;\n    if (el) {\n      if (window.MutationObserver) {\n        let observer: MutationObserver | null = new MutationObserver(\n          (mutations: Array<MutationRecord>) => {\n            mutations.forEach((mutation: MutationRecord) => {\n              mutation.removedNodes.forEach((removedNode: Node) => {\n                if (component && removedNode === pEl) {\n                  component.destroy();\n                  if (observer) {\n                    observer.disconnect();\n                    observer = null;\n                  }\n                  component = null;\n                  el = null;\n                }\n              });\n            });\n          }\n        );\n        observer.observe(document, {\n          childList: true,\n          subtree: true,\n        });\n      } else {\n        pComponent.addEventListener(EventNames.NODE_REMOVED, function() {\n          pComponent.destroy();\n          component = null;\n          el = null;\n        });\n      }\n    }\n  }\n\n  registerNotification(pObject: NotificationRegistration): void {\n    if (pObject.notifications) {\n      const notifications: ReadonlyArray<string> = pObject.notifications;\n      const classRef: ICanHandleNotifications = pObject.classRef;\n      notifications.forEach((pNotification: string) => {\n        \n        this.notifier.addNotificationListener(\n          classRef,\n          pNotification,\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          classRef.handleNotifications\n        );\n      });\n    }\n  }\n\n  /**\n   * Get NotificationController access.\n   * @returns {NotificationController}\n   */\n  get notifier(): NotificationController {\n    return NotificationController.getInstance();\n  }\n\n  get data(): Record<string, any> {\n    return this._data;\n  }\n\n  get components(): ReadonlyArray<IAmComponent> {\n    return this._components;\n  }\n\n  /**\n   */\n  static getComponentMapByName(pObject: Record<string, any>,pName: string): any {\n   return pObject[pName] || null;\n  }\n\n  /**\n   * destroy application\n   */\n  destroy(): void {\n    while (this._components.length > 0) {\n      const component: IAmComponent = this._components[0];\n      if (component && component.el) {\n        component.el.remove();\n      }\n      this._components.shift();\n    }\n  }\n}","export function walkDom(pEl: Element | null, pCallback: Function): void {\n  if (pEl) {\n    pCallback(pEl)\n    pEl = pEl.firstElementChild\n\n    while (pEl) {\n      walkDom(pEl, pCallback)\n      pEl = pEl.nextElementSibling\n    }\n  }\n}\n","export function cyborgEval(\n  pExpression: any,\n  pDataContext: any,\n  pAdditionalHelperVariables?: Record<string, any>\n): void {\n  const additionalHelperVariables: any = pAdditionalHelperVariables || {}\n  if (typeof pExpression === 'function') {\n    return pExpression.call(pDataContext)\n  }\n\n  return new Function(\n    ...Object.keys(additionalHelperVariables),\n    `var __cyborg_result; with($data) { __cyborg_result = ${pExpression} }; return __cyborg_result`\n  )(pDataContext, ...Object.values(additionalHelperVariables))\n}\n","import { MotherBoard } from './MotherBoard'\nimport { EventObject } from '../events/EventObject'\nimport { walkDom } from '../functions/walkDom'\nimport { cyborgEval } from '../functions/cyborgEval'\nimport { NotificationBody } from '../notifications/NotificationBody'\nimport { IAmComponent } from '../interfaces/IAmComponent'\n\nexport class Component implements IAmComponent {\n  private _el: HTMLElement | undefined\n  private _name = ''\n  private _events: Array<EventObject>\n  private _motherboard: MotherBoard\n  private _addEventListener: Function\n  private _removeEventListener: Function\n\n  protected _notifications: ReadonlyArray<string> = []\n\n  constructor() {\n    this._motherboard = MotherBoard.getInstance()\n    this._events = []\n\n    this._addEventListener = (\n      pTarget: HTMLElement,\n      pEventName: string,\n      pHandler: Function\n    ): Function => {\n      const handler: Function = pHandler.bind(this)\n      this._events.push({\n        target: pTarget,\n        name: pEventName,\n        handler: handler\n      })\n      return handler\n    }\n\n    this._removeEventListener = (\n      pTarget: HTMLElement,\n      pEventName: string,\n      pHandler: Function\n    ): HTMLElement => {\n      const index: number = this._events.findIndex((evtObj: EventObject) => {\n        return evtObj.name === pEventName && evtObj.handler === pHandler\n      })\n      this._events.splice(index, 1)\n      return pTarget\n    }\n  }\n\n  /**\n   * Bind your component in the system.\n   * @param {HTMLElement} pEl Connected Node\n   */\n  bind(pEl: HTMLElement): void {\n    this._el = pEl\n    this._name = pEl.dataset.component || ''\n    this.registerInlineListeners()\n  }\n\n  onload(): void {\n    // window.onload trigger for component.\n  }\n\n  onunload(): void {\n    // window.onunload trigger for component.\n  }\n\n  addListener(pType: string): void {\n    this.motherboard.notifier.addNotificationListener(\n      this,\n      pType,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      this.handleNotifications\n    )\n  }\n\n  removeListener(pType: string): void {\n    this.motherboard.notifier.removeNotificationListener(pType, this)\n  }\n\n  notify(pType: string, pParams: Record<string, any> = {}): void {\n    this.motherboard.notifier.notify(pType, pParams)\n  }\n\n  handleNotifications(pObject: NotificationBody): void {\n    pObject.notification\n  }\n\n  registerInlineListeners(): void {\n    if (this._el) {\n      walkDom(this._el, (element: HTMLElement) => {\n        if (element.dataset.component) {\n          return\n        }\n        Array.from(element.attributes).forEach((pAttribute: Attr) => {\n          if (!pAttribute.name.startsWith('on')) return\n          const event: string = pAttribute.name.replace('data-on:', '')\n\n          element.dataset[pAttribute.name] = pAttribute.value\n          element.removeAttribute(pAttribute.name)\n\n          const isFunction: boolean =\n            pAttribute.value.includes('(') && pAttribute.value.includes(')')\n\n          if (isFunction) {\n            const handler: Function = this._addEventListener(\n              element,\n              event,\n              new Function(`this.${pAttribute.value}`).bind(this)\n            )\n            element.addEventListener(event, handler as EventListener)\n          } else {\n            const handler: Function = this._addEventListener(\n              element,\n              event,\n              () => {\n                cyborgEval(this._motherboard.data, pAttribute.value)\n              }\n            )\n            element.addEventListener(event, handler as EventListener)\n          }\n        })\n      })\n    }\n  }\n\n  addEventListener(\n    pEventName: string,\n    pHandler: EventListenerOrEventListenerObject\n  ): void {\n    if (this._el) {\n      const handler: Function = this._addEventListener(\n        this._el,\n        pEventName,\n        pHandler\n      )\n      this._el.addEventListener(\n        pEventName,\n        handler as EventListenerOrEventListenerObject,\n        false\n      )\n    }\n  }\n\n  removeEventListener(\n    pEventName: string,\n    pHandler: EventListenerOrEventListenerObject\n  ): void {\n    if (this._el) {\n      this._removeEventListener(this._el, pEventName, pHandler)\n      this._el.removeEventListener(pEventName, pHandler)\n    }\n  }\n\n  /**\n   * @param {Object} pData Data object to use\n   * @param {function} pTemplate template function\n   */\n  render(pData: Record<string, any>, pTemplate?: Function): void {\n    if (this._el) {\n      if (this._el.children) {\n        while (this._el.children.length > 0) {\n          this._el.children[0].remove()\n        }\n      }\n\n      if (pTemplate) {\n        this._el.innerHTML = pTemplate(pData)\n      } else {\n        this._el.innerHTML = this.getTemplate(pData)\n      }\n      this.motherboard.build(this._el)\n    }\n  }\n\n  /**\n   * @param {Object} pData\n   * @returns {string}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getTemplate(pData?: Record<string, any>): string {\n    pData = pData || {}\n    return ''\n  }\n\n  get notifications(): ReadonlyArray<string> {\n    return this._notifications\n  }\n\n  get name(): string {\n    return this._name\n  }\n\n  get el(): HTMLElement | undefined {\n    return this._el\n  }\n\n  get motherboard(): MotherBoard {\n    return this._motherboard\n  }\n\n  get events(): ReadonlyArray<Record<string, any>> {\n    return this._events\n  }\n\n  /**\n   * Garbage collection ;)\n   */\n  destroy(): void {\n    this.motherboard.notifier.removeAllListenersFor(this)\n    while (this._events.length > 0) {\n      const event: EventObject = this._events[0]\n      this._removeEventListener(event.target, event.name, event.handler)\n      event.target.removeEventListener(\n        event.name,\n        event.handler as EventListenerOrEventListenerObject\n      )\n    }\n    if (this._el) {\n      this._el.remove()\n      this._el = undefined\n    }\n  }\n}\n","import { MotherBoard } from './core/MotherBoard'\nimport { Component } from './core/Component'\nimport { Notification } from './notifications/Notification'\nimport { NotificationBody } from './notifications/NotificationBody'\n\nconst CyborgJS: any = { MotherBoard, Component, Notification, NotificationBody }\nexport default CyborgJS\n"],"names":[],"mappings":"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"}