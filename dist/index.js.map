{"version":3,"file":"index.js","sources":["../src/constants/EventNames.ts","../src/notifications/Notification.ts","../src/notifications/NotificationController.ts","../src/core/MotherBoard.ts","../src/functions/walkDom.ts","../node_modules/tslib/tslib.es6.js","../src/core/Component.ts","../src/functions/cyborgEval.ts"],"sourcesContent":["export default {\n  DOCUMENT_READY: 'DOMContentLoaded',\n  NODE_REMOVED: 'DOMNodeRemovedFromDocument'\n};\n","import IAmComponent from \"../interfaces/IAmComponent\";\n\nexport class Notification {\n    readonly name: string;\n    readonly target: IAmComponent;\n    readonly handler: Function;\n\n    constructor(pTarget: IAmComponent, pName: string, pHandler: Function) {\n        this.name = pName;\n        this.handler = pHandler;\n        this.target = pTarget;\n    }\n}\n","import {Notification} from \"./Notification\";\nimport {NotificationBody} from \"./NotificationBody\";\nimport { IAmComponent } from \"..\";\n\nexport default class NotificationController {\n    static _instance: NotificationController;\n\n    private _listeners: Array<Notification>;\n\n    constructor() {\n        if (NotificationController._instance) {\n            throw new Error('Use NotificationController.getInstance()');\n        }\n        NotificationController._instance = this;\n        this._listeners = [];\n    }\n\n    static getInstance(): NotificationController {\n        if (NotificationController._instance) {\n            return NotificationController._instance;\n        }\n        return new NotificationController();\n    }\n\n    /**\n     * emit a notification\n     * @param pType\n     * @param pParams\n     */\n    notify(pType: string, pParams?: Record<string, any>): void {\n        const listeners: ReadonlyArray<Notification> = this._listeners;\n        const notes: ReadonlyArray<Notification> = listeners.filter((listener: Notification) => {\n            return listener.name === pType;\n        });\n\n        notes.forEach((note: Notification) => {\n            const body: NotificationBody = {\n                notification: pType,\n                payload: pParams || {}\n            };\n            note.handler(body);\n        });\n    }\n\n    /**\n     * Add a Notification Listener\n     * @param pTarget\n     * @param pType\n     * @param pHandler\n     */\n    addNotificationListener(pTarget: IAmComponent, pType: string, pHandler: Function): void {\n        const note: Notification = new Notification(pTarget, pType, pHandler.bind(pTarget));\n        this._listeners.push(note);\n    }\n\n    /**\n     * Remove a given listener. This only removes one record.\n     * @param pType string Notification name\n     * @param pTarget Component object\n     */\n    removeNotificationListener(pType: string, pTarget: any): void {\n        const listeners: Array<Notification> = this._listeners;\n        const index: number = listeners.findIndex((notification: Notification): boolean => {\n            return (notification.name === pType) && (notification.target === pTarget);\n        });\n        this._listeners = listeners.splice(index, 1);\n    }\n\n    removeAllListenersFor(pInstance: IAmComponent): void {\n        const listeners: Array<Notification> = this._listeners;\n        this._listeners = listeners.filter((notification: Notification): boolean => {\n            return (notification.target.name !== pInstance.name);\n        });\n    }\n\n    get listeners(): Array<Notification> {\n        return this._listeners;\n    }\n}\n","import { NotificationRegistration } from '../notifications/NotificationRegistration';\nimport EventNames from '../constants/EventNames';\nimport NotificationController from '../notifications/NotificationController';\nimport IAmComponent from '../interfaces/IAmComponent';\nimport { ComponentMap } from './ComponentMap';\n\ndeclare interface ComponentConstructor {\n  new (): IAmComponent;\n}\n\ndeclare const componentsMapping: Map<string, ComponentConstructor>;\n\nexport default class MotherBoard {\n  static _instance: MotherBoard;\n\n  public componentsMap: Array<ComponentMap> = [];\n  private _components: Array<IAmComponent> = [];\n  private _data: Record<string, any> = {};\n\n  constructor() {\n    if (MotherBoard._instance) {\n      throw new Error('Use MotherBoard.getInstance()');\n    }\n    MotherBoard._instance = this;\n    this.init();\n  }\n\n  static getInstance(): MotherBoard {\n    if (MotherBoard._instance) {\n      return MotherBoard._instance;\n    }\n    return new MotherBoard();\n  }\n\n  /**\n   * Init Application.\n   */\n  init(): void {\n    window.onload = (): void => {\n      this.onload();\n    };\n\n    window.onunload = (): void => {\n      this.onunload();\n    };\n\n    window.onpagehide = (): void => {\n      this.destroy();\n    };\n\n    document.addEventListener(\n      EventNames.DOCUMENT_READY,\n      (): void => {\n        this.bind();\n      },\n      false\n    );\n  }\n\n  /**\n   * Document ready handler\n   */\n  bind(): void {\n    const html: HTMLHtmlElement | null = document.querySelector('html');\n    if (!html) {\n      throw Error('No html tag available');\n    }\n\n    html.classList.remove('no-js');\n    html.classList.add('js');\n    this.build(html);\n  }\n\n  build(pEl: HTMLElement): void {\n    const componentsList: Array<HTMLElement> = Array.from(\n      pEl.querySelectorAll('[data-component]')\n    );\n    if (componentsList.length > 0) {\n      componentsList.forEach((el: HTMLElement) => {\n        const dataset: DOMStringMap = el.dataset;\n        if (dataset && dataset.component) {\n          const componentsArray: Array<string> = dataset.component\n            .replace(' ', '')\n            .split(',');\n          componentsArray.forEach((componentString: string) => {\n            const ComponentClass: ComponentConstructor | null = MotherBoard.getComponentMapByName(\n              this.componentsMap,\n              componentString\n            );\n            if (ComponentClass) {\n              const component: IAmComponent = new ComponentClass();\n              if (\n                component.notifications &&\n                component.notifications.length > 0\n              ) {\n                this.registerNotification({\n                  name: componentString,\n                  notifications: component.notifications,\n                  classRef: component,\n                });\n              }\n\n              component.bind(el);\n              this._components.push(component);\n              this.destroyComponentListener(component, el);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Window onload handler\n   */\n  onload(): void {\n    this._components.forEach((pComponent: IAmComponent) => {\n      pComponent.onload();\n    });\n  }\n\n  onunload(): void {\n    this._components.forEach((pComponent: IAmComponent) => {\n      pComponent.onunload();\n    });\n  }\n\n  destroyComponentListener(pComponent: IAmComponent, pEl: HTMLElement): void {\n    let component: IAmComponent | null = pComponent;\n    let el: HTMLElement | null = pEl;\n    if (el) {\n      if (window.MutationObserver) {\n        let observer: MutationObserver | null = new MutationObserver(\n          (mutations: Array<MutationRecord>) => {\n            mutations.forEach((mutation: MutationRecord) => {\n              mutation.removedNodes.forEach((removedNode: Node) => {\n                if (component && removedNode === pEl) {\n                  component.destroy();\n                  if (observer) {\n                    observer.disconnect();\n                    observer = null;\n                  }\n                  component = null;\n                  el = null;\n                }\n              });\n            });\n          }\n        );\n        observer.observe(document, {\n          childList: true,\n          subtree: true,\n        });\n      } else {\n        pComponent.addEventListener(EventNames.NODE_REMOVED, function() {\n          pComponent.destroy();\n          component = null;\n          el = null;\n        });\n      }\n    }\n  }\n\n  registerNotification(pObject: NotificationRegistration): void {\n    if (pObject.notifications) {\n      const notifications: ReadonlyArray<string> = pObject.notifications;\n      const classRef: IAmComponent = pObject.classRef;\n      notifications.forEach((pNotification: string) => {\n        \n        this.notifier.addNotificationListener(\n          classRef,\n          pNotification,\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          classRef.handleNotifications\n        );\n      });\n    }\n  }\n\n  /**\n   * Get NotificationController access.\n   * @returns {NotificationController}\n   */\n  get notifier(): NotificationController {\n    return NotificationController.getInstance();\n  }\n\n  get data(): Record<string, any> {\n    return this._data;\n  }\n\n  get components(): ReadonlyArray<IAmComponent> {\n    return this._components;\n  }\n\n  /**\n   */\n  static getComponentMapByName(\n    pArray: Array<ComponentMap>,\n    pName: string\n  ): ComponentConstructor | null {\n    if (pArray && (pArray.length > 0)) {\n      return pArray[pName] || null;\n    }\n    return null;\n  }\n\n  /**\n   * destroy application\n   */\n  destroy(): void {\n    while (this._components.length > 0) {\n      const component: IAmComponent = this._components[0];\n      if (component && component.el) {\n        component.el.remove();\n      }\n      this._components.shift();\n    }\n  }\n}\n","export function walkDom(pEl: Element, pCallback: Function): void{\n    if (pEl) {\n        pCallback(pEl);\n        pEl = pEl.firstElementChild;\n\n        while (pEl) {\n            walkDom(pEl, pCallback);\n            pEl = pEl.nextElementSibling;\n        }\n        \n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import MotherBoard from './MotherBoard';\nimport { EventObject } from '../events/EventObject';\nimport { walkDom } from '../functions/walkDom';\nimport { cyborgEval } from '../functions/cyborgEval';\nimport { NotificationBody } from '../notifications/NotificationBody';\nimport  IAmComponent from '../interfaces/IAmComponent';\n\nexport default class Component implements IAmComponent{\n  name = '';\n  \n  private _el: HTMLElement | undefined;\n  private _events: Array<EventObject>;\n  private _motherboard: MotherBoard;\n  private _addEventListener: Function;\n  private _removeEventListener: Function;\n\n  constructor() {\n    this._motherboard = MotherBoard.getInstance();\n    this._events = [];\n    this._addEventListener = (\n      pTarget: HTMLElement,\n      pEventName: string,\n      pHandler: Function\n    ): Function => {\n      const handler: Function = pHandler.bind(this);\n      this._events.push({\n        target: pTarget,\n        name: pEventName,\n        handler: handler,\n      });\n      return handler;\n    };\n\n    this._removeEventListener = (\n      pTarget: HTMLElement,\n      pEventName: string,\n      pHandler: Function\n    ): HTMLElement => {\n      const index: number = this._events.findIndex(\n        (evtObj: EventObject) => {\n          return (\n            evtObj.name === pEventName &&\n            evtObj.handler === pHandler\n          );\n        }\n      );\n      this._events.splice(index, 1);\n      return pTarget;\n    };\n  }\n\n  /**\n  * Bind your component in the system.\n  * @param {HTMLElement} pEl Connected Node\n  */\n  bind(pEl: HTMLElement): void {\n    this._el = pEl;\n    this.name = pEl.dataset.component || pEl.toString();\n    this.registerInlineListeners();\n  }\n\n  onload(): void {\n    // window.onload trigger for component.\n  }\n\n  onunload(): void {\n    // window.onunload trigger for component.\n  }\n\n  addListener(pType: string): void {\n    this.motherboard.notifier.addNotificationListener(\n      this,\n      pType,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      this.handleNotifications\n    );\n  }\n\n  removeListener(pType: string): void {\n    this.motherboard.notifier.removeNotificationListener(\n      pType,\n      this\n    );\n  }\n\n  notify(\n    pType: string,\n    pParams: Record<string, any> = {}\n  ): void {\n    this.motherboard.notifier.notify(pType, pParams);\n  }\n\n  handleNotifications(pObject: NotificationBody): void {\n    pObject.notification;\n  }\n\n  registerInlineListeners(): void {\n    if (this._el) {\n      walkDom(this._el, (element: HTMLElement) => {\n        if (element.dataset.component) {\n          return;\n        }\n        Array.from(element.attributes).forEach(\n          (pAttribute: Attr) => {\n            if (!pAttribute.name.startsWith('on')) return;\n            element.dataset[pAttribute.name] = pAttribute.value;\n            const event: string = pAttribute.name.replace(\n              'data-on:',\n              ''\n            );\n            element.removeAttribute(pAttribute.name);\n            const isFunction: boolean =\n              pAttribute.value.includes('(') &&\n              pAttribute.value.includes(')');\n\n            if (isFunction) {\n              const handler: Function = this._addEventListener(\n                element,\n                event,\n                new Function(`this.${pAttribute.value}`).bind(\n                  this\n                )\n              );\n              element.addEventListener(\n                event,\n                handler as EventListener\n              );\n            } else {\n              const handler: Function = this._addEventListener(\n                element,\n                event,\n                () => {\n                  cyborgEval(\n                    this._motherboard.data,\n                    pAttribute.value\n                  );\n                }\n              );\n              element.addEventListener(\n                event,\n                handler as EventListener\n              );\n            }\n          }\n        );\n      });\n    }\n  }\n\n  addEventListener(\n    pEventName: string,\n    pHandler: EventListenerOrEventListenerObject\n  ): void {\n    if (this._el) {\n      const handler: Function = this._addEventListener(\n        this._el,\n        pEventName,\n        pHandler\n      );\n      this._el.addEventListener(\n        pEventName,\n        handler as EventListenerOrEventListenerObject,\n        false\n      );\n    }\n  }\n\n  removeEventListener(\n    pEventName: string,\n    pHandler: EventListenerOrEventListenerObject\n  ): void {\n    if (this._el) {\n      this._removeEventListener(this._el, pEventName, pHandler);\n      this._el.removeEventListener(pEventName, pHandler);\n    }\n  }\n\n  /**\n  * @param {Object} pData Data object to use\n  * @param {function} pTemplate template function\n  */\n  render(\n    pData: Record<string, any>,\n    pTemplate?: Function\n  ): void {\n    if (this._el) {\n      if (this._el.children) {\n        while (this._el.children.length > 0) {\n          this._el.children[0].remove();\n        }\n      }\n\n      if (pTemplate) {\n        this._el.innerHTML = pTemplate(pData);\n      } else {\n        this._el.innerHTML = this.getTemplate(pData);\n      }\n      this.motherboard.build(this._el);\n    }\n  }\n\n  /**\n  * @param {Object} pData\n  * @returns {string}\n  */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getTemplate(pData?: Record<string, any>): string {\n    pData = pData || {};\n    return '';\n  }\n\n  get notifications(): ReadonlyArray<string>  {\n    return []; \n  }\n\n  get el(): HTMLElement | undefined {\n    return this._el;\n  }\n\n  get motherboard(): MotherBoard {\n    return this._motherboard;\n  }\n\n  get events(): ReadonlyArray<Record<string, any>> {\n    return this._events;\n  }\n\n  /**\n  * Garbage collection ;)\n  */\n  destroy(): void {\n    this.motherboard.notifier.removeAllListenersFor(this);\n    while (this._events.length > 0) {\n      const event: EventObject = this._events[0];\n      this._removeEventListener(\n        event.target,\n        event.name,\n        event.handler\n      );\n      event.target.removeEventListener(\n        event.name,\n        event.handler as EventListenerOrEventListenerObject\n      );\n    }\n    if (this._el) {\n      this._el.remove();\n      this._el = undefined;\n    }\n  }\n}\n","export function cyborgEval(\n  pExpression: any,\n  pDataContext: any,\n  pAdditionalHelperVariables?: Record<string, any>\n): void {\n  const additionalHelperVariables: any = pAdditionalHelperVariables || {};\n  if (typeof pExpression === 'function') {\n    return pExpression.call(pDataContext);\n  }\n\n  return new Function(\n    ...Object.keys(additionalHelperVariables),\n    `var __cyborg_result; with($data) { __cyborg_result = ${pExpression} }; return __cyborg_result`\n  )(pDataContext, ...Object.values(additionalHelperVariables));\n}\n"],"names":["pTarget","pName","pHandler","this","name","handler","target","NotificationController","_instance","Error","_listeners","pType","pParams","filter","listener","forEach","note","body","notification","payload","Notification","bind","push","listeners","index","findIndex","splice","pInstance","Object","MotherBoard","init","window","onload","_this","onunload","onpagehide","destroy","document","addEventListener","EventNames","html","querySelector","classList","remove","add","build","pEl","componentsList","Array","from","querySelectorAll","length","el","dataset","component","replace","split","componentString","ComponentClass","getComponentMapByName","componentsMap","notifications","registerNotification","classRef","_components","destroyComponentListener","pComponent","MutationObserver","observer_1","mutations","mutation","removedNodes","removedNode","disconnect","observe","childList","subtree","pObject","classRef_1","pNotification","notifier","addNotificationListener","handleNotifications","getInstance","_data","pArray","shift","walkDom","pCallback","firstElementChild","nextElementSibling","__spreadArrays","s","i","il","arguments","r","k","a","j","jl","_motherboard","_events","_addEventListener","pEventName","_removeEventListener","evtObj","Component","_el","toString","registerInlineListeners","motherboard","removeNotificationListener","notify","element","attributes","pAttribute","startsWith","value","event","removeAttribute","includes","Function","pExpression","pDataContext","pAdditionalHelperVariables","additionalHelperVariables","data","call","keys","values","removeEventListener","pData","pTemplate","children","innerHTML","getTemplate","removeAllListenersFor","event_1","undefined"],"mappings":"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"}